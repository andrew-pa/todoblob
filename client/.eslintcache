[{"C:\\Users\\andre\\Source\\mjbpr\\client\\src\\index.js":"1","C:\\Users\\andre\\Source\\mjbpr\\client\\src\\reportWebVitals.js":"2","C:\\Users\\andre\\Source\\mjbpr\\client\\src\\App.js":"3","C:\\Users\\andre\\Source\\mjbpr\\client\\src\\Transport.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":15616,"mtime":1608664765833,"results":"8","hashOfConfig":"6"},{"size":5238,"mtime":1608657176818,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"nh0w3u",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\andre\\Source\\mjbpr\\client\\src\\index.js",[],["20","21"],"C:\\Users\\andre\\Source\\mjbpr\\client\\src\\reportWebVitals.js",[],"C:\\Users\\andre\\Source\\mjbpr\\client\\src\\App.js",["22","23","24","25","26","27","28","29","30","31","32","33","34","35","36"],"C:\\Users\\andre\\Source\\mjbpr\\client\\src\\Transport.js",["37","38","39","40","41","42","43","44","45","46","47","48","49"],"import React from 'react';\r\nimport jsonPatch from 'json8-patch';\r\nimport oo from 'json8';\r\n\r\nfunction smartPatchMerge(src_a, src_b) {\r\n    // you could probably skip add/remove pairs that canceled out, but that would be tricky for questionable benefit\r\n    let main = oo.clone(src_a);\r\n    src_b.forEach((patch) => {\r\n        if(patch.op == 'replace') {\r\n            let existing = main.find(p => p.op == 'replace' && p.path == patch.path);\r\n            if(existing) existing.value = patch.value;\r\n            else main.push(patch);\r\n        } else {\r\n            main.push(patch);\r\n        }\r\n    });\r\n    return main;\r\n}\r\n\r\nexport function usePatchableState(initial) {\r\n    const [state, setState] = React.useState(initial);\r\n\r\n    return [ state, patch => setState(prev_state => jsonPatch.apply(oo.clone(prev_state), patch).doc) ];\r\n}\r\n\r\nexport function useTeledata(initial) {\r\n    const updateTimer = React.useRef(1);\r\n    const numEmptyUpdates = React.useRef(0);\r\n\r\n    const [state, apply] = React.useReducer(\r\n        (old_state, patch) => {\r\n            // console.log('reduce', old_state, patch);\r\n            if(patch.clearosp !== undefined)\r\n                return { data: old_state.data, outstanding_patch: [], version: patch.clearosp };\r\n            if(patch.init != undefined) {\r\n                return {data: patch.init.data, version: patch.init.version, outstanding_patch: []};\r\n            }\r\n            if(patch.server_patch != undefined) {\r\n                if(old_state.outstanding_patch.length != 0) console.log('!!!');\r\n                return {\r\n                    data: jsonPatch.apply(oo.clone(old_state.data), patch.server_patch.patch).doc,\r\n                    outstanding_patch: [],\r\n                    version: patch.server_patch.version\r\n                };\r\n            }\r\n            try {\r\n            return {\r\n                data: jsonPatch.apply(oo.clone(old_state.data), patch).doc,\r\n                outstanding_patch: smartPatchMerge(old_state.outstanding_patch, patch),\r\n                version: old_state.version\r\n            };\r\n            } catch(e) {\r\n                console.log(e, patch);\r\n                updateTimer.current = 0;\r\n                return old_state;\r\n            }\r\n        },\r\n        {data: initial, outstanding_patch: [], version: -1}\r\n    );\r\n\r\n    function syncOutstanding() {\r\n        if(state.outstanding_patch.length == 0) {\r\n            // console.log(`ut ${updateTimer.current} neu ${numEmptyUpdates.current}`);\r\n            updateTimer.current = updateTimer.current - 1;\r\n            if(updateTimer.current <= 0) {\r\n                updateTimer.current = 1000000; //don't update until the fetch completes\r\n                fetch('/api/user/0/data?client_version='+state.version)\r\n                    .then(res => {\r\n                        if(res.status != 200) throw res;\r\n                        return res.json();\r\n                    })\r\n                    .then(res => {\r\n                        if(res != null) {\r\n                            if(res.data != undefined) {\r\n                                apply({init: res});\r\n                                numEmptyUpdates.current = 0;\r\n                                updateTimer.current = 0;\r\n                            } else if(res.patch != undefined) {\r\n                                apply({server_patch: res});\r\n                                numEmptyUpdates.current = 0;\r\n                                updateTimer.current = 0;\r\n                            } else {\r\n                                throw res;\r\n                            }\r\n                        } else {\r\n                            updateTimer.current = Math.min(Math.pow(2, numEmptyUpdates.current), 128);\r\n                            numEmptyUpdates.current += 1;\r\n                        }\r\n                    })\r\n                    .catch(e => {\r\n                        numEmptyUpdates.current = 0;\r\n                        updateTimer.current = 50;\r\n                        console.log(e);\r\n                    });\r\n            }\r\n            return;\r\n        }\r\n        fetch('/api/user/0/data', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(state.outstanding_patch)\r\n        })\r\n            .then(res => { if(res.status != 200) throw res; return res.json(); })\r\n            .then(ver => apply({clearosp: ver.version}))\r\n            .catch(e => {\r\n                console.log(e);\r\n                apply({clearosp: state.version});\r\n            });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener('unload', syncOutstanding);\r\n        const loop = setInterval(syncOutstanding, 200);\r\n        syncOutstanding(); // get initial data from server\r\n        return () => {\r\n            window.removeEventListener('unload', syncOutstanding);\r\n            clearInterval(loop);\r\n        };\r\n    }, [state.outstanding_patch, syncOutstanding, apply]);\r\n\r\n    return [state.data, apply, state.outstanding_patch.length, state.version];\r\n}\r\n\r\nexport function cdapply(apply, newroot) {\r\n    return (args) => {\r\n        return apply(args.map(p => ({ ...p, path: p.path == '/' ? newroot : `${newroot}${p.path}`})));\r\n    };\r\n}\r\n\r\n\r\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":4,"column":50,"nodeType":"56","messageId":"57","endLine":4,"endColumn":54},{"ruleId":"58","severity":1,"message":"59","line":71,"column":97,"nodeType":"60","messageId":"61","endLine":71,"endColumn":99},{"ruleId":"58","severity":1,"message":"62","line":75,"column":30,"nodeType":"60","messageId":"61","endLine":75,"endColumn":32},{"ruleId":"58","severity":1,"message":"59","line":80,"column":38,"nodeType":"60","messageId":"61","endLine":80,"endColumn":40},{"ruleId":"58","severity":1,"message":"59","line":88,"column":18,"nodeType":"60","messageId":"61","endLine":88,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":91,"column":25,"nodeType":"60","messageId":"61","endLine":91,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":96,"column":25,"nodeType":"60","messageId":"61","endLine":96,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":96,"column":59,"nodeType":"60","messageId":"61","endLine":96,"endColumn":61},{"ruleId":"58","severity":1,"message":"59","line":105,"column":25,"nodeType":"60","messageId":"61","endLine":105,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":105,"column":48,"nodeType":"60","messageId":"61","endLine":105,"endColumn":50},{"ruleId":"58","severity":1,"message":"62","line":175,"column":17,"nodeType":"60","messageId":"61","endLine":175,"endColumn":19},{"ruleId":"58","severity":1,"message":"59","line":188,"column":18,"nodeType":"60","messageId":"61","endLine":188,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":212,"column":42,"nodeType":"60","messageId":"61","endLine":212,"endColumn":44},{"ruleId":"58","severity":1,"message":"59","line":324,"column":25,"nodeType":"60","messageId":"61","endLine":324,"endColumn":27},{"ruleId":"58","severity":1,"message":"62","line":329,"column":70,"nodeType":"60","messageId":"61","endLine":329,"endColumn":72},{"ruleId":"58","severity":1,"message":"59","line":9,"column":21,"nodeType":"60","messageId":"61","endLine":9,"endColumn":23},{"ruleId":"58","severity":1,"message":"59","line":10,"column":48,"nodeType":"60","messageId":"61","endLine":10,"endColumn":50},{"ruleId":"58","severity":1,"message":"59","line":10,"column":71,"nodeType":"60","messageId":"61","endLine":10,"endColumn":73},{"ruleId":"58","severity":1,"message":"62","line":35,"column":27,"nodeType":"60","messageId":"61","endLine":35,"endColumn":29},{"ruleId":"58","severity":1,"message":"62","line":38,"column":35,"nodeType":"60","messageId":"61","endLine":38,"endColumn":37},{"ruleId":"58","severity":1,"message":"62","line":39,"column":55,"nodeType":"60","messageId":"61","endLine":39,"endColumn":57},{"ruleId":"63","severity":1,"message":"64","line":61,"column":5,"nodeType":"65","endLine":109,"endColumn":6},{"ruleId":"58","severity":1,"message":"59","line":62,"column":43,"nodeType":"60","messageId":"61","endLine":62,"endColumn":45},{"ruleId":"58","severity":1,"message":"62","line":69,"column":39,"nodeType":"60","messageId":"61","endLine":69,"endColumn":41},{"ruleId":"58","severity":1,"message":"62","line":74,"column":41,"nodeType":"60","messageId":"61","endLine":74,"endColumn":43},{"ruleId":"58","severity":1,"message":"62","line":78,"column":49,"nodeType":"60","messageId":"61","endLine":78,"endColumn":51},{"ruleId":"58","severity":1,"message":"62","line":103,"column":42,"nodeType":"60","messageId":"61","endLine":103,"endColumn":44},{"ruleId":"58","severity":1,"message":"59","line":126,"column":58,"nodeType":"60","messageId":"61","endLine":126,"endColumn":60},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","The 'syncOutstanding' function makes the dependencies of useEffect Hook (at line 119) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'syncOutstanding' in its own useCallback() Hook.","FunctionDeclaration","no-global-assign","no-unsafe-negation"]